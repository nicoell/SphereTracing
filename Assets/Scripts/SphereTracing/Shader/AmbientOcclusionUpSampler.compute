#pragma kernel AmbientOcclusionUpSampleH    ST_R ST_LOW_R AO_R HIGH
#pragma kernel AmbientOcclusionUpSampleM    ST_R ST_LOW_R AO_R MID
#pragma kernel AmbientOcclusionUpSampleL    ST_R ST_LOW_R AO_R LOW

#include "Defines/HighMidLowThreads.cginc"
#include "Defines/Structs.cginc"

#include "Inputs/SharedInputs.cginc"
#include "Inputs/TextureAccessAwareInputs.cginc"

#include "Utils/StructCustomSampleFuncs.cginc"


RWTexture2DArray<float4> AmbientOcclusionDataHigh;

void Main(uint3 id, float2 direction)
{
    float2 uv = float2((id.x + 0.5) / Resolution.x, (id.y + 0.5) / Resolution.y);
    float2 uvstep = float2(1.0 / AoResolution.x, 1.0 / AoResolution.y) * direction;
    //AmbientOcclusion ao = SampleAmbientOcclusion(sampler_point_clamp, uv, id.z, 0.0);
    AmbientOcclusion ao = UpSampleAmbientOcclusion(uv, id.z, 0.0)
    
    AmbientOcclusionDataHigh[id] = float4(ao.BentNormal, ao.SpecularOcclusion);
}

[numthreads(ThreadsX, ThreadsY, ThreadsZ)]
void AmbientOcclusionUpSampleH ( uint3 id : SV_DispatchThreadID) { Main(id, float2(1, 0)); }
[numthreads(ThreadsX, ThreadsY, ThreadsZ)]
void AmbientOcclusionUpSampleM ( uint3 id : SV_DispatchThreadID) { Main(id, float2(1, 0)); }
[numthreads(ThreadsX, ThreadsY, ThreadsZ)]
void AmbientOcclusionUpSampleL ( uint3 id : SV_DispatchThreadID) { Main(id, float2(1, 0)); }
